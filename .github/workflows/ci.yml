---
name: ci
on:
  - push

env:
  AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION:    ${{ secrets.AWS_REGION }}

jobs:
  build-packages:
    name: Build Packages
    runs-on:
      - baremetal

    strategy:
      matrix:
        distro: [
          debian8, debian9, debian10,
          centos7, centos8,
          amazon2,
          fedora31
          # TODO: Bring back
          # - Fedora 32 when kernel 5.9  is supported (issue https://github.com/elastio/elastio-snap/issues/57 is fixed)
          # - Fedora 33 when kernel 5.10 is supported.
          # fedora32, fedora33
        ]
        arch: [ amd64 ]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Set ENV
        if: always()
        env:
          DISTRO: ${{ matrix.distro }}
          ARCH:   ${{ matrix.arch }}
        run: .github/scripts/set_env.sh

      - name: Check ENV
        run: .github/scripts/check_env.sh

      - name: Start a box
        if: always()
        env:
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        run: .github/scripts/start_box.sh

      - name: Build packages
        run: vagrant ssh ${{env.INSTANCE_NAME}} -c 'make ${PKG_TYPE}'
        working-directory: ${{env.BOX_DIR}}

      - name: Collect artifacts
        run: vagrant ssh ${{env.INSTANCE_NAME}} -c 'repobuild/collect_artifacts.sh'
        working-directory: ${{env.BOX_DIR}}

      - name: Build kernel module
        run: vagrant ssh ${{env.INSTANCE_NAME}} -c 'make'
        working-directory: ${{env.BOX_DIR}}

      - name: Install kernel module
        run: vagrant ssh ${{env.INSTANCE_NAME}} -c 'sudo make install'
        working-directory: ${{env.BOX_DIR}}

        # NOTE: This special logic with the real block device instead of the loop device is used especially for Fedora 31
        # due to issue https://github.com/elastio/elastio-snap/issues/71. It can be simplified back after the issue is fixed.
      - name: Attach external drive
        if: ${{ matrix.distro == 'fedora31' }}
        run: |
          qemu-img create -f qcow2 ${TEST_IMAGE} 1G
          virsh attach-disk --domain ${BOX_DIR##*/}_${INSTANCE_NAME} --source ${TEST_IMAGE} --target vdb --driver qemu --subdriver qcow2 --targetbus virtio
          cd $BOX_DIR && vagrant ssh ${{env.INSTANCE_NAME}} -c 'echo -e "n\np\n\n\n\nw" | sudo fdisk /dev/vdb'

      - name: Run tests
        run: |
          [[ $INSTANCE_NAME == fedora31* ]] && device=/dev/vdb1
          vagrant ssh ${{env.INSTANCE_NAME}} -c "cd tests && sudo ./elio-test.sh $device"
        working-directory: ${{env.BOX_DIR}}
        # For now tests are taking 10-20 seconds. But they can hang.
        # 5 minutes seems to be reasonable timeout.
        timeout-minutes: 5

      - name: Detach external drive
        if: always()
        run: |
          if virsh domblklist ${BOX_DIR##*/}_${INSTANCE_NAME} --details | grep "file" | awk '{ print $NF }' | grep ${TEST_IMAGE} ; then
              virsh detach-disk --domain ${BOX_DIR##*/}_${INSTANCE_NAME} ${TEST_IMAGE}
          fi
          rm -f ${TEST_IMAGE}

      - name: Upload artifacts
        run: vagrant ssh ${{env.INSTANCE_NAME}} -c 'AWS_SECRET_ACCESS_KEY='"'$AWS_SECRET_ACCESS_KEY'"' repobuild/upload.sh
          --source repobuild/artifacts/
          --bucket artifacts.assur.io
          --target /linux/elastio-snap/${SOURCE_BRANCH}/${GITHUB_RUN_NUMBER}/${PKG_TYPE}
          --exclude *GPG-KEY'
        working-directory: ${{env.BOX_DIR}}

      - name: Destroy a box
        if: always()
        run: .github/scripts/destroy_box.sh

  manifest:
    name: Artifacts manifest
    needs: build-packages
    runs-on:
      - baremetal

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Make manifest
        run: echo $GITHUB_RUN_NUMBER > latest && cat latest | grep -E '^[0-9]+$'

      - name: Upload manifest
        run: repobuild/upload.sh
          --source latest
          --bucket artifacts.assur.io
          --target /linux/elastio-snap/$(.github/scripts/detect_branch.sh)

  dispatch-packaging-repo:
    name: Trigger repo upload
    needs: manifest
    runs-on:
      - baremetal

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Dispatch packaging repo
        env:
          REPO_HOOK_TOKEN: ${{ secrets.REPO_HOOK_TOKEN }}
        run: .github/scripts/dispatch_packaging.sh
