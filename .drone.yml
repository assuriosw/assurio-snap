env: &env
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION:
      from_secret: AWS_REGION

kind: pipeline
name: Debian 8
type: exec

platform:
  os: linux
  arch: amd64

node:
  distro: debian8
  kind: build

steps:
- name: build Debian Jessie packages
  commands:
    # Step 1: Build deb packages
    - make deb
    # Step 2: Collect artifacts
    - repobuild/collect_artifacts.sh

- name: Upload artifacts
  <<: *env
  commands:
    - repobuild/upload.sh
      --source repobuild/artifacts/
      --bucket artifacts.assur.io
      --target /linux/assurio-snap/${DRONE_SOURCE_BRANCH}/${DRONE_BUILD_NUMBER}/deb
      --exclude *GPG-KEY
  when:
    event: push

- name: Make artifacts manifest
  commands:
    - echo ${DRONE_BUILD_NUMBER} >> latest

- name: Upload artifacts manifest
  <<: *env
  commands:
    - repobuild/upload.sh
      --source latest
      --bucket artifacts.assur.io
      --target /linux/assurio-snap/${DRONE_SOURCE_BRANCH}
  when:
    event: push

---
kind: pipeline
name: Debian 9
type: exec

platform:
  os: linux
  arch: amd64

node:
  distro: debian9
  kind: build

steps:
- name: build Debian Stretch packages
  commands:
    # Step 1: Build deb packages
    - make deb
    # Step 2: Collect artifacts
    - repobuild/collect_artifacts.sh

- name: Upload artifacts
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION:
      from_secret: AWS_REGION
  commands:
    - repobuild/upload.sh
      --source repobuild/artifacts/
      --bucket artifacts.assur.io
      --target /linux/assurio-snap/${DRONE_SOURCE_BRANCH}/${DRONE_BUILD_NUMBER}/deb
      --exclude *GPG-KEY
  when:
    event: push

---
kind: pipeline
name: Debian 10 
type: exec

platform:
  os: linux
  arch: amd64

node:
  distro: debian10
  kind: build

steps:
- name: build Debian Buster packages
  commands:
    # Step 1: Build deb packages
    - make deb
    # Step 2: Collect artifacts
    - repobuild/collect_artifacts.sh

- name: Upload artifacts
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION:
      from_secret: AWS_REGION
  commands:
    - repobuild/upload.sh
      --source repobuild/artifacts/
      --bucket artifacts.assur.io
      --target /linux/assurio-snap/${DRONE_SOURCE_BRANCH}/${DRONE_BUILD_NUMBER}/deb
      --exclude *GPG-KEY
  when:
    event: push

---
kind: pipeline
name: CentOS 6
type: exec

platform:
  os: linux
  arch: amd64

node:
  distro: centos6
  kind: build

steps:
- name: build CentOS 6 packages
  commands:
    # Step 1: Build rpm packages
    - make rpm
    # Step 2: Collect artifacts
    - repobuild/collect_artifacts.sh

- name: Upload artifacts
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION:
      from_secret: AWS_REGION
  commands:
    - repobuild/upload.sh
      --source repobuild/artifacts/
      --bucket artifacts.assur.io
      --target /linux/assurio-snap/${DRONE_SOURCE_BRANCH}/${DRONE_BUILD_NUMBER}/rpm
  when:
    event: push

---
kind: pipeline
name: CentOS 7
type: exec

platform:
  os: linux
  arch: amd64

node:
  distro: centos7
  kind: build

steps:
- name: build CentOS 7 packages
  commands:
    # Step 1: Build rpm packages
    - make rpm
    # Step 2: Collect artifacts
    - repobuild/collect_artifacts.sh

- name: Upload artifacts
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION:
      from_secret: AWS_REGION
  commands:
    - repobuild/upload.sh
      --source repobuild/artifacts/
      --bucket artifacts.assur.io
      --target /linux/assurio-snap/${DRONE_SOURCE_BRANCH}/${DRONE_BUILD_NUMBER}/rpm
  when:
    event: push

---
kind: pipeline
name: CentOS 8
type: exec

platform:
  os: linux
  arch: amd64

node:
  distro: centos8
  kind: build

steps:
- name: build CentOS 8 packages
  commands:
    # Step 1: Build rpm packages
    - make rpm
    # Step 2: Collect artifacts
    - repobuild/collect_artifacts.sh

- name: Upload artifacts
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION:
      from_secret: AWS_REGION
  commands:
    - repobuild/upload.sh
      --source repobuild/artifacts/
      --bucket artifacts.assur.io
      --target /linux/assurio-snap/${DRONE_SOURCE_BRANCH}/${DRONE_BUILD_NUMBER}/rpm
  when:
    event: push

---
kind: pipeline
name: Fedora 31
type: exec

platform:
  os: linux
  arch: amd64

node:
  distro: fedora31
  kind: build

steps:
- name: build Fedora 31 packages
  commands:
    # Step 1: Build rpm packages
    - make rpm
    # Step 2: Collect artifacts
    - repobuild/collect_artifacts.sh

- name: Upload artifacts
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION:
      from_secret: AWS_REGION
  commands:
    - repobuild/upload.sh
      --source repobuild/artifacts/
      --bucket artifacts.assur.io
      --target /linux/assurio-snap/${DRONE_SOURCE_BRANCH}/${DRONE_BUILD_NUMBER}/rpm
  when:
    event: push

---
kind: pipeline
name: Fedora 32
type: exec

platform:
  os: linux
  arch: amd64

node:
  distro: fedora32
  kind: build

steps:
- name: build Fedora 32 packages
  commands:
    # Step 1: Build rpm packages
    - make rpm
    # Step 2: Collect artifacts
    - repobuild/collect_artifacts.sh

- name: Upload artifacts
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION:
      from_secret: AWS_REGION
  commands:
    - repobuild/upload.sh
      --source repobuild/artifacts/
      --bucket artifacts.assur.io
      --target /linux/assurio-snap/${DRONE_SOURCE_BRANCH}/${DRONE_BUILD_NUMBER}/rpm
  when:
    event: push

---
kind: pipeline
name: Amazon Linux 2
type: exec

platform:
  os: linux
  arch: amd64

node:
  distro: amazon2
  kind: build

steps:
- name: build Amazon Linux 2 packages
  commands:
    # Step 1: Build rpm packages
    - make rpm
    # Step 2: Collect artifacts
    - repobuild/collect_artifacts.sh

- name: Upload artifacts
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION:
      from_secret: AWS_REGION
  commands:
    - repobuild/upload.sh
      --source repobuild/artifacts/
      --bucket artifacts.assur.io
      --target /linux/assurio-snap/${DRONE_SOURCE_BRANCH}/${DRONE_BUILD_NUMBER}/rpm
  when:
    event: push

---
kind: pipeline
name: Trigger repo build

platform:
  os: linux
  arch: amd64

steps:
- name: trigger
  image: plugins/downstream
  # This step fails when 'packaging' hasn't a branch with the
  # same name. Ignoring...
  failure: ignore
  settings:
    server: https://ci.assur.io
    token:
      from_secret: MACHINE_KEY
    fork: true
    wait: true
    timeout: 600
    repositories:
      - assuriosw/packaging@${DRONE_SOURCE_BRANCH}
  when:
    event: push

depends_on:
- Debian 8
- Debian 9 
- Debian 10
- CentOS 6
- CentOS 7
- CentOS 8
- Fedora 31
- Amazon Linux 2
