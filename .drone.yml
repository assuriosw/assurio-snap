kind: pipeline
name: debian_jessie_packaging

platform:
  os: linux
  arch: amd64

steps:
- name: build packages
  image: debian:jessie

  commands:
    # Step 1: Prepare container
    - apt-get update &&
        apt-get install -y build-essential rsync git pax apt-utils tree
        gnupg2 dpkg-sig
    - dir=`pwd` && cd / &&
        git clone https://github.com/ascherer/debbuild.git &&
        cd /debbuild &&
        ./configure && make && make install &&
        cd $dir
    # Step 2: Build deb packages
    - make deb
    # Step 3: Collect artifacts
    - repobuild/collect_artifacts.sh

- name: upload artifacts
  image: plugins/s3
  settings:
    bucket: artifacts.assur.io
    acl: private
    access_key:
      from_secret: AWS_ACCESS_KEY_ID
    secret_key:
      from_secret: AWS_SECRET_ACCESS_KEY
    region:
      from_secret: AWS_REGION
    source: repobuild/artifacts/**/*
    target: /linux/assurio-snap/${DRONE_SOURCE_BRANCH}/${DRONE_BUILD_NUMBER}/deb
    strip_prefix: repobuild/artifacts
  when:
    event: push

---
kind: pipeline
name: centos_packaging

platform:
  os: linux
  arch: amd64

steps:
- name: build CentOS 6 packages
  image: centos:6.10

  commands:
    # Step 1: Prepare container
    - yum install -y gcc rsync rpm-build tree
    # Step 2: Build rpm packages
    - make rpm
    # Step 3: Collect artifacts
    - repobuild/collect_artifacts.sh

- name: build CentOS 7 packages
  image: centos:7.0.1406

  commands:
    # Step 1: Prepare container
    - yum install -y gcc make rsync rpm-build tree
    # Step 2: Build rpm packages
    - make rpm
    # Step 3: Collect artifacts
    - repobuild/collect_artifacts.sh

- name: build CentOS 8 packages
  image: centos:8

  commands:
    # Step 1: Prepare container
    - yum install -y gcc make rsync rpm-build tree
    # Step 2: Build rpm packages
    - make rpm
    # Step 3: Collect artifacts
    - repobuild/collect_artifacts.sh

- name: upload artifacts
  image: plugins/s3
  settings:
    bucket: artifacts.assur.io
    acl: private
    access_key:
      from_secret: AWS_ACCESS_KEY_ID
    secret_key:
      from_secret: AWS_SECRET_ACCESS_KEY
    region:
      from_secret: AWS_REGION
    source: repobuild/artifacts/**/*
    target: /linux/assurio-snap/${DRONE_SOURCE_BRANCH}/${DRONE_BUILD_NUMBER}/rpm
    strip_prefix: repobuild/artifacts
  when:
    event: push

---
kind: pipeline
name: trigger_repo_build

platform:
  os: linux
  arch: amd64

steps:
- name: make artifacts manifest
  image: debian:jessie
  commands:
    - echo ${DRONE_BUILD_NUMBER} >> latest

- name: upload artifacts manifest
  image: plugins/s3
  settings:
    bucket: artifacts.assur.io
    acl: private
    access_key:
      from_secret: AWS_ACCESS_KEY_ID
    secret_key:
      from_secret: AWS_SECRET_ACCESS_KEY
    region:
      from_secret: AWS_REGION
    source: latest
    target: /linux/assurio-snap/${DRONE_SOURCE_BRANCH}
  when:
    event: push

- name: trigger
  image: plugins/downstream
  settings:
    server: https://ci.assur.io
    token:
      from_secret: MACHINE_KEY
    fork: true
    wait: true
    timeout: 600
    repositories:
      - assuriosw/packaging@${DRONE_SOURCE_BRANCH}
  when:
    event: push

depends_on:
- debian_jessie_packaging
- centos_packaging
